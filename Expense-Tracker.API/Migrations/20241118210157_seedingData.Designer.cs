// <auto-generated />
using System;
using Expense_Tracker.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Expense_Tracker.API.Migrations
{
    [DbContext(typeof(ExpenseTrackerDbContext))]
    [Migration("20241118210157_seedingData")]
    partial class seedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Expense_Tracker.API.Models.Domain.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("4df523f6-5e73-43af-aaf1-0c980e16fc9f"),
                            Name = "Food",
                            UserId = new Guid("b3c5814b-9434-4520-9887-64d1979db9b0")
                        },
                        new
                        {
                            CategoryId = new Guid("67ecebc9-e619-4f84-97a4-f33f5b59790a"),
                            Name = "Transport",
                            UserId = new Guid("b3c5814b-9434-4520-9887-64d1979db9b0")
                        },
                        new
                        {
                            CategoryId = new Guid("9d86390b-8e1b-4b82-baff-c0b953f1ef1e"),
                            Name = "Utilities",
                            UserId = new Guid("5a5f8530-846c-4398-a264-1e6cabdd053e")
                        });
                });

            modelBuilder.Entity("Expense_Tracker.API.Models.Domain.Expense", b =>
                {
                    b.Property<Guid>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExpenseId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            ExpenseId = new Guid("f57449ae-c365-4b0d-82f8-954c1dd562d7"),
                            Amount = 50.75m,
                            CategoryId = new Guid("4df523f6-5e73-43af-aaf1-0c980e16fc9f"),
                            Date = new DateTime(2024, 11, 18, 22, 1, 56, 716, DateTimeKind.Local).AddTicks(2796),
                            Description = "Groceries",
                            UserId = new Guid("b3c5814b-9434-4520-9887-64d1979db9b0")
                        },
                        new
                        {
                            ExpenseId = new Guid("7ef757a7-4494-4a52-a6d0-ec8c6b823910"),
                            Amount = 15.00m,
                            CategoryId = new Guid("67ecebc9-e619-4f84-97a4-f33f5b59790a"),
                            Date = new DateTime(2024, 11, 18, 22, 1, 56, 716, DateTimeKind.Local).AddTicks(2815),
                            Description = "Bus Ticket",
                            UserId = new Guid("b3c5814b-9434-4520-9887-64d1979db9b0")
                        },
                        new
                        {
                            ExpenseId = new Guid("635958b5-d605-4fef-8cae-6916fe7d162c"),
                            Amount = 120.00m,
                            CategoryId = new Guid("9d86390b-8e1b-4b82-baff-c0b953f1ef1e"),
                            Date = new DateTime(2024, 11, 18, 22, 1, 56, 716, DateTimeKind.Local).AddTicks(2820),
                            Description = "Electric Bill",
                            UserId = new Guid("5a5f8530-846c-4398-a264-1e6cabdd053e")
                        });
                });

            modelBuilder.Entity("Expense_Tracker.API.Models.Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("b3c5814b-9434-4520-9887-64d1979db9b0"),
                            Email = "zyzornatti@etracker.com",
                            PasswordHash = "Oluwatobi123",
                            Username = "zyzornatti"
                        },
                        new
                        {
                            UserId = new Guid("5a5f8530-846c-4398-a264-1e6cabdd053e"),
                            Email = "zaltego@etracker.com",
                            PasswordHash = "Oluwatobi123",
                            Username = "zaltego"
                        });
                });

            modelBuilder.Entity("Expense_Tracker.API.Models.Domain.Category", b =>
                {
                    b.HasOne("Expense_Tracker.API.Models.Domain.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Expense_Tracker.API.Models.Domain.Expense", b =>
                {
                    b.HasOne("Expense_Tracker.API.Models.Domain.Category", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Expense_Tracker.API.Models.Domain.User", "User")
                        .WithMany("Expenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Expense_Tracker.API.Models.Domain.Category", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("Expense_Tracker.API.Models.Domain.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
